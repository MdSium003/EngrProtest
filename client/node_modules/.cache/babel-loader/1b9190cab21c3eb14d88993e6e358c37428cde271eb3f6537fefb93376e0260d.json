{"ast":null,"code":"var _jsxFileName = \"E:\\\\EngrProtest\\\\EngrProtest\\\\client\\\\src\\\\components\\\\Videos.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Videos = ({\n  token\n}) => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const [videoUrl, setVideoUrl] = useState('');\n  const [title, setTitle] = useState('');\n  const isAdmin = Boolean(token);\n  const fetchVideos = async () => {\n    const res = await fetch('/api/videos');\n    const data = await res.json();\n    setVideos(data);\n  };\n  useEffect(() => {\n    fetchVideos();\n  }, []);\n  const handleAdd = async e => {\n    e.preventDefault();\n    await fetch('/api/videos', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': token\n      },\n      body: JSON.stringify({\n        video_url: videoUrl,\n        title\n      })\n    });\n    setVideoUrl('');\n    setTitle('');\n    fetchVideos();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Videos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAdd,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"url\",\n        placeholder: \"Video URL (YouTube, etc.)\",\n        value: videoUrl,\n        onChange: e => setVideoUrl(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title (optional)\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), videos.map(v => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [v.title && /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: v.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: v.video_url,\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        children: v.video_url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, v.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Videos, \"0nPy6eGkqMOBlg9JBksPrq3L5Rs=\");\n_c = Videos;\nexport default Videos;\nvar _c;\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Videos","token","_s","videos","setVideos","videoUrl","setVideoUrl","title","setTitle","isAdmin","Boolean","fetchVideos","res","fetch","data","json","handleAdd","e","preventDefault","method","headers","body","JSON","stringify","video_url","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","map","v","href","rel","id","_c","$RefreshReg$"],"sources":["E:/EngrProtest/EngrProtest/client/src/components/Videos.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst Videos = ({ token }) => {\r\n  const [videos, setVideos] = useState([]);\r\n  const [videoUrl, setVideoUrl] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const isAdmin = Boolean(token);\r\n\r\n  const fetchVideos = async () => {\r\n    const res = await fetch('/api/videos');\r\n    const data = await res.json();\r\n    setVideos(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchVideos();\r\n  }, []);\r\n\r\n  const handleAdd = async (e) => {\r\n    e.preventDefault();\r\n    await fetch('/api/videos', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': token\r\n      },\r\n      body: JSON.stringify({ video_url: videoUrl, title })\r\n    });\r\n    setVideoUrl('');\r\n    setTitle('');\r\n    fetchVideos();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Videos</h2>\r\n      {isAdmin && (\r\n        <form onSubmit={handleAdd}>\r\n          <input type=\"url\" placeholder=\"Video URL (YouTube, etc.)\" value={videoUrl} onChange={(e) => setVideoUrl(e.target.value)} required />\r\n          <input type=\"text\" placeholder=\"Title (optional)\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n          <button type=\"submit\">Add</button>\r\n        </form>\r\n      )}\r\n\r\n      {videos.map((v) => (\r\n        <div className=\"card\" key={v.id}>\r\n          {v.title && <h4>{v.title}</h4>}\r\n          <a href={v.video_url} target=\"_blank\" rel=\"noreferrer\">{v.video_url}</a>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Videos;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}